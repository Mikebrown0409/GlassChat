{
  "name": "glasschat",
  "version": "0.1.0",
  "private": true,
  "type": "module",
  "scripts": {
    "build": "next build",
    "check": "next lint && tsc --noEmit",
    "db:generate": "prisma migrate dev",
    "db:migrate": "prisma migrate deploy",
    "db:push": "prisma db push",
    "db:studio": "prisma studio",
    "dev": "next dev --turbo",
    "format:check": "prettier --check \"**/*.{ts,tsx,js,jsx,mdx}\" --cache",
    "format:write": "prettier --write \"**/*.{ts,tsx,js,jsx,mdx}\" --cache",
    "postinstall": "prisma generate",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "preview": "next build && next start",
    "start": "next start",
    "typecheck": "tsc --noEmit",
    "prepare": "husky",
    "redis:start": "docker-compose up -d redis",
    "redis:stop": "docker-compose stop redis",
    "redis:logs": "docker-compose logs -f redis",
    "redis:cli": "docker-compose exec redis redis-cli",
    "redis:ui": "docker-compose --profile tools up -d redis-commander",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker-compose down -v --remove-orphans",
    "dev:setup": "npm run redis:start && npm run db:push && npm run dev",
    "dev:clean": "npm run docker:clean && rm -rf .next dist",
    "dev:reset": "npm run dev:clean && npm install && npm run dev:setup",
    "wasm:check": "node -e \"console.log('WebAssembly supported:', typeof WebAssembly !== 'undefined')\"",
    "test:env": "node -e \"console.log('Environment check passed')\" && npm run wasm:check",
    "test:ai": "tsx scripts/test-ai-integration.ts",
    "test:ai:verbose": "tsx scripts/test-ai-integration.ts --verbose",
    "test:sync": "tsx scripts/test-sync-simple.ts",
    "test:sync:verbose": "tsx scripts/test-sync-simple.ts --verbose",
    "test:sync:full": "tsx scripts/test-sync-two-device.ts",
    "test:collaboration": "tsx scripts/test-collaboration-three-users.ts",
    "test:collaboration:verbose": "tsx scripts/test-collaboration-three-users.ts --verbose",
    "ai:models": "node -e \"import('./src/lib/ai/models.js').then(m => console.log('Available models:', m.aiModels.getAvailableModels().map(({model, info}) => info.displayName)))\"",
    "mock:populate": "tsx scripts/populate-mock-data.ts",
    "test:ui": "npm run mock:populate && npm run dev",
    "lighthouse:audit": "lighthouse http://localhost:3000 --output=json --output-path=./lighthouse-report.json --quiet --chrome-flags='--headless'"
  },
  "dependencies": {
    "@auth/prisma-adapter": "^2.7.2",
    "@google/generative-ai": "^0.24.1",
    "@heroicons/react": "^2.2.0",
    "@prisma/client": "^6.5.0",
    "@t3-oss/env-nextjs": "^0.12.0",
    "@tailwindcss/typography": "^0.5.16",
    "@tanstack/react-query": "^5.69.0",
    "@trpc/client": "^11.0.0",
    "@trpc/next": "^11.0.0",
    "@trpc/react-query": "^11.0.0",
    "@trpc/server": "^11.0.0",
    "@types/react-syntax-highlighter": "^15.5.13",
    "@upstash/redis": "^1.35.0",
    "clsx": "^2.1.1",
    "comlink": "^4.4.2",
    "dexie": "^4.0.11",
    "dexie-react-hooks": "^1.1.7",
    "framer-motion": "^12.16.0",
    "geist": "^1.4.2",
    "husky": "^9.1.7",
    "intro.js": "^7.2.0",
    "lucide-react": "^0.513.0",
    "markdown-wasm": "^1.1.0",
    "nanoid": "^5.1.5",
    "next": "^15.2.3",
    "next-auth": "5.0.0-beta.25",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-markdown": "^10.1.0",
    "react-syntax-highlighter": "^15.6.1",
    "react-virtuoso": "^4.5.0",
    "remark-gfm": "^4.0.1",
    "superjson": "^2.2.1",
    "zod": "^3.24.2"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@tailwindcss/postcss": "^4.0.15",
    "@types/intro.js": "^5.1.5",
    "@types/node": "^20.14.10",
    "@types/react": "^19.0.0",
    "@types/react-dom": "^19.0.0",
    "autoprefixer": "^10.4.21",
    "eslint": "^9.23.0",
    "eslint-config-next": "^15.2.3",
    "lighthouse": "^12.6.1",
    "postcss": "^8.5.3",
    "prettier": "^3.5.3",
    "prettier-plugin-tailwindcss": "^0.6.11",
    "prisma": "^6.5.0",
    "tailwindcss": "^4.0.15",
    "typescript": "^5.8.2",
    "typescript-eslint": "^8.27.0"
  },
  "ct3aMetadata": {
    "initVersion": "7.39.3"
  },
  "packageManager": "npm@10.9.2"
}
